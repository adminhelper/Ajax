<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
<script src="http://code.jquery.com/jquery-3.1.0.js"></script>
<script type="text/javascript" src="js/jquery.ajax-cross-origin.min.js"></script>
<script type="text/javascript">
	/* 
	원래 $.ajax는 xhr객체를 사용해서 서버와 통신을 하지만
	xhr객체는 SOP정책에 의해 Cross Domain 리소스 접근을 
	브라우저가 막는다.
	그런데 아래처럼 
	dataType : "jsonp" 를 추가하면
	$.ajax메서드는 동일하게 사용할 수 있지만
	내부적으로는 xhr객체를 사용하지 않고 <script>태그를 사용해서
	서버의 리소스를 가져온다.
	*/
	var url0 = "http://127.0.0.1:8080/Contact/list_jsonp.jsp";
	$.ajax({
		url : url0,
		type : "GET",
		data : {pageno:1, pagesize:3},
		dataType : "jsonp",
		jsonp: "callback",
		success : function(data){
			console.log(data);
		}
	});
	
	var url1 = "http://127.0.0.1:8080/Contact/list_jsonp.jsp?callback=?";
	$.getJSON(url1, {pageno:2, pagesize:3}, function(data){
		console.log(data);
	});
	
	var url2 = "http://127.0.0.1:8080/Contact/list_jsonp.jsp";
	$.ajax({
		crossOrigin : true,
		url : url2,
		dataType : "json",
		type : "GET",
		data : {pageno:3, pagesize:3},
		success : function(data){
			console.log(data);
		}
	});
</script>
</head>
<body>

</body>
</html>

















